////
; Copyright (c) uib gmbh (www.uib.de)
; Cette documentation appartient à uib
; et publié sous licence Creative Commons by-sa allemande
; voir:
; https://creativecommons.org/licenses/by-sa/3.0/de/
; https://creativecommons.org/licenses/by-sa/3.0/de/legalcode
; anglais:
; https://creativecommons.org/licenses/by-sa/3.0/
; https://creativecommons.org/licenses/by-sa/3.0/legalcode
; 
; crédits: http://www.opsi.org/credits/
////

:Author:    OpenSides sprl
:Email:     opsi@opensides.be
:Date:      08.01.2013
:Revision:  4.0.2
:toclevels: 6


include::../common/opsi_terms.asciidoc[]

[[opsi-manual-netboot-products]]
== Produits Netboot

[[opsi-manual-netboot-bootimage-parametrization]]
=== Paramètres de l'image de démarrage Linux pour opsi

L'image démarrage Linux pour opsi a des paramètres qui peuvent être utilisés pour modifier son comportement. Vous essayerez cette option si l'image de démarrage ne fonctionne pas correctement avec les paramètres standard de votre matériel (par exemple un écran noir). +
Vous pouvez modifier ces paramètres standards via '{opsi-configed}' choisissant l'onglet 'Réseau et paramètres supplémentaires' et en utilisant l'entrée 'opsi-linux-bootimage.append'.

Les valeurs typiques sont (peuvent être combinés):

* +acpi=off+

* +noapic+

* +irqpoll+

* +reboot=bios+

Une autre valeur par défaut importante est le mot de passe de l'utilisateur root dans l'image de démarrage Linux. Ce mot de passe est 'linux123' par défaut et vous devez le changer pour des raisons de sécurité.

Pour ce faire, modifiez l'entrée 'opsi-linux-bootimage.append' dans 'Configuration serveur'.

L'option que vous devez changer est 'pwh' (password hash). Comme valeur pour cette option, vous devez donner un nouveau mot de passe de hachage, qui sera chargé dans `/etc/shadow` au moment du démarrage.

La meilleure façon d'obtenir le hash correct du mot de passe est de se connecter via ssh à votre image de démarrage:

[source,prompt]
----
ssh root@<client.domain.tld>
----

L'ancien mot de passe est 'linux123'.

Maintenant définissez un nouveau mot de passe pour l'utilisateur root:

[source,prompt]
----
passwd
----

Récupérez le nouveau hachage

[source,prompt]
----
grep root /etc/shadow
----

Le résultat devrait ressembler à ceci:

[source,prompt]
----
root:$6$344YXKIT$D4RPZfHMmv8e1/i5nNkOFaRN2oYNobCEjCHnkehiEFA7NdkDW9KF496OHBmyHHq0kD2FBLHZoTdr5YoDlIoWz/:14803:0:99999:7:::
----

Maintenant, copiez d'après le premier deux-points jusqu'au deuxième deux-points et utilisez cela comme valeur pour 'pwh'.

Donc l'option pour 'opsi-linux-bootimage.append' sera:

[source,prompt]
----
pwh=$6$344YXKIT$D4RPZfHMmv8e1/i5nNkOFaRN2oYNobCEjCHnkehiEFA7NdkDW9KF496OHBmyHHq0kD2FBLHZoTdr5YoDlIoWz/
----


[[opsi-manual-netboot-unattended]]
=== Installation automatisée de l'OS sans assistance


[[opsi-manual-netboot-unattended-overview]]
==== Aperçu


.Étapes d'une ré-installation:

* En utilisant PXE-Boot: 
** Choisissez le client qui doit être installé avec l'utilitaire opsi-configed ou opsi-admin.
* Au prochain redémarrage, le client détecte (via PXE-Bootprom) la demande de re-installation et charge l'image de démarrage à partir de '{opsi-server}'.

* En utilisant CD-Boot:
** Le client démarre l'image de démarrage à partir de 'opsi-client-bootcd'.
* L'image d'amorçage démarre et demande confirmation pour procéder à la réinstallation. C'est la seule question interactive. Après avoir confirmé, l'installation se poursuit sans aucune nouvelle demande d'interaction.
* L'image de démarrage partitionne et formate le disque dur.
* L'image de démarrage copie les fichiers d'installation et de configuration du '{opsi-server}' vers le client et déclenche le redémarrage.
* Après le redémarrage le client installe le système d'exploitation en fonction des informations de configuration fournies sans aucune interaction.
* Après '{opsi-client-agent}' est installé en tant qu'installateur OPSI pour la distribution automatisé de logiciel.
* Opsi installe tous les logiciels tel que défini dans la configuration du client.

[[opsi-manual-netboot-unattended-requirements]]
==== Conditions préalables

L'ordinateur client doit être équipé d'un contrôleur réseau amorçable. Les contrôleurs réseau les plus récents offrent cette fonctionnalité (PXE boot), également les contrôleurs réseau récentes qui sont intégrés sur la carte mère du PC. Le logiciel PXE, qui est stocké dans 'bootprom' du contrôleur de réseau, commande le processus de démarrage via le réseau en fonction de la séquence d'amorçage du BIOS. Habituellement, la séquence de démarrage doit être défini dans le BIOS, 'network-boot' doit être le périphérique de démarrage initial.  S'il n'y a aucune possibilité d'utiliser PXE vous pouvez démarrer à partir du opsi-client-bootcd.

Le paquet d'installation opsi pour le système d'exploitation pour être installé doit être présent sur le serveur de dépôt. Dans ce qui suit nous supposons que Windows XP soit le système d'exploitation à installer.

[[opsi-manual-netboot-unattended-netboot]]
==== Démarrage du PC client via le réseau

Le microprogramme PXE s'active au démarrage de l'ordinateur. Une partie de la mise en œuvre PXE est un client DHCP.

.Étape 1 pendant le Boot PXE
image::netboot-pxe.png["Étape 1 pendant le Boot PXE",width=300]

Au début, le PC ne connaît que l'adresse Ethernet de son contrôleur réseau (MAC), composé de six caractères hexadécimaux à deux chiffres.

Le firmware déclenche une diffusion 'DHCPDISCOVER': “J'ai besoin d'une adresse IP, qui est mon serveur DHCP?“ 

Le serveur DHCP propose une adresse ('DHCPOFFER').

'DHCPREQUEST' est la réponse du client au serveur si l'adresse IP est acceptée. (Ce n'est pas une étape obsolète car il pourrait y avoir plus d'un serveur DHCP dans le réseau.) 

Le serveur envoie un 'DHCPACK' pour reconnaître la demande. L'information est envoyée à nouveau au client.

Vous pouvez observer ce processus sur l'écran, pour PXE-BOOTPROM affiche des informations sur le micrologiciel et son 'MAC'. Le symbole "pipe" en rotation est affiché lors de la demande. Lorsqu'une offre a été faite, il est remplacé par un '\' et vous obtenez les informations transmises (IP du CLIENT, MASQUE, IP du serveur DHCP, IP de la PASSERELLE).
Un peu plus tard, vous devriez obtenir une réponse comme ceci: 'Mon adresse IP SEMBLE ÊTRE ......'.

Ce processus rend le PC régulièrment membre à part entière du réseau configuré.
L'étape suivante consiste à charger le fichier de démarrage (image de démarrage) proposée dans les informations de configuration. 

[[opsi-manual-netboot-pxelinux]]
==== Chargement de pxelinux

L'image d'amorçage est chargé via le protocole de transfert trivial de fichiers (tftp). Le message affiché est „LOADING“. tftp est un protocole assez ancien et simple pour transférer des fichiers sans authentification. En fait, toutes les données disponibles via tftp sont accessibles à tous dans le réseau. Donc l'accès tftp se limite à un répertoire, qui est généralement '/tftpboot'. Ce répertoire est spécifié dans inetd (internet daemon, /etc/inetd.conf), qui débutera le démon tftp 'tftpd' à la demande. La commande de démarrage comme indiqué dans inetd.conf est quelque chose comme +
`tftpd -p -u tftp -s /tftpboot`

Le processus de démarrage PXE est multi-étape:

La premiere étape est de charger et lancer le fichier soumis dans le cadre du processus de découverte d'adresse (habituellement /tftpboot/linux/pxelinux.0).

Le logiciel 'pxelinux.0' cherche alors des informations de configuration et d'amorçage dans '/tftpboot/linux/pxelinux.cfg'. Il recherche d'abord un fichier PC spécifique avec un nom basé sur l'adresse Ethernet (MAC) du contrôleur réseau avec un premier 01. Le nom de fichier pour le contrôleur avec l'adresse Ethernet 00:0C:29:11:6B:D2 serait 01-00-0c-29-11-6b-d2. Si le fichier n'est pas trouvé, 'pxelinux.0' commencera à raccourcir le nom du fichier (à partir de la fin) pour obtenir une correspondance. Si ce processus se termine sans résultat, le fichier 'default' sera chargé. Ce fichier ne contient que les instructions pour démarrer à partir du disque dur local. Dans ce cas sur l'ordinateur rien sera installé et tout simplement démarrera le système d'exploitation actuel depuis son disque dur. 

.Etape 2 Boot PXE
image::netboot-pxelinux.png["Etape 2 Boot PXE",width=300]

Pour lancer la réinstallation d'un certain PC, un fichier chargeable est préparé pour le programme 'pxelinux.0'. Afin de le faire, opsipxeconfd crée un fichier personnalisé pour le PC dans '/tftpboot/linux/pxelinux.cfg'. Une partie de ce fichier est la commande pour charger l'image d'amorçage de l'installation. Ce fichier contient aussi la clé du client pour déchiffrer le mot de passe pcpatch. Ce fichier est créé en tant que 'canal nommé' et disparaît donc après avoir été lu une fois. Plus de détails à ce sujet dans le chapitre sur la sécurité des partages de fichiers.

Sur la base des informations de 'pxelinux.0' obtenues à partir du 'canal nommé', l'image de démarrage actuelle est chargé à partir du serveur de dépôt opsi via tftp. L'image de démarrage est basé sur un noyau Linux (/tftpboot/linux/install) au sein d'un système de fichiers initrd approprié (/tftpboot/linux/miniroot.gz) et d'une taille d'environ 65 MB.

[[opsi-manual-netboot-unattended-CD]]
==== Démarrer à partir du CD
Analoguement à l'initialisation tftp via PXE-bootprom, l'image de démarrage de l'installation peut être démarré à partir du CD de démarrage d'opsi.

Cela pourrait être recommandé dans les conditions suivantes:

* le client n'a pas de PXE bootprom;
* il n'y a pas de dhcp;
* il y a un dhcp mais il n'est pas autorisé à configurer les données du client et les adresses matérielles des clients sont inconnus;
* il y a un dhcp mais il n'est pas configuré pour cette demande.

Selon les différentes situations, plusieurs informations doivent être fournies à l'image de démarrage via CD en saisie interactive. Le cas le plus simple est de ne pas fournir aucune autre information. Éventuellement, le nom d'hôte du client peut être transmis par 'hn=<nom hôte>'. En utilisant l'option 'ASK_CONF=1' plusieurs paramètres peuvent être interrogés. En appuyant sur 'F1' au prompt du CD montre la syntaxe.

Lisez le chapitre 'Créer un nouveau client en utilisant opsi-client-bootcd' dans le manuel opsi-getting-started.

[[opsi-manual-netboot-unattended-reinst]]
==== L'image de démarrage linux se prépare pour la réinstallation

L'image d'amorçage effectue à nouveau une requête DHCP et configure l'interface réseau d'après les informations perçues. Ensuite, les données de configuration pour le client seront chargés via '{opsi-webservice}'.


.Boot PXE chargé pour la préparation de l'image de démarrage sur le disque dur pour l'installation du système d'exploitation
image::netboot-pxeos.png["Boot PXE chargé pour la préparation de l'image de démarrage sur le disque dur pour l'installation du système d'exploitation",width=300]

Il détient également des informations sur la façon de partitionner le disque dur, le système de fichiers à utiliser et le système d'exploitation à installer. En outre, il fournit le mot de passe crypté pour se connecter au partage de fichiers.

Ces informations seront combinées avec des informations tirées de la réponse DHCP et ensuite seront transmises au script d'installation pour un traitement ultérieur.

Ensuite le mot de passe de l'utilisateur 'pcpatch' sera déchiffré avec la clé transféré pour monter le partage de fichiers de l'installation, puis sera la fois de l'appelle au script d'installation à partir du partage monté pour lancer l'installation du système d'exploitation. Les opérations spécifiques qui exécute le script dépendent du système d'exploitation qui doit être installée. Ci-dessous seront décrites les étapes d'une installation de Windows XP.

*Préparer le disque*: Sur le disque dur, l'image de démarrage crée une nouvelle partition (de la taille de 6 GB), formate et installe un noyau amorçable ntloader.

*Copiez le fichier d'installation*: Les fichiers nécessaires à l'installation de l'OS et les fichiers de configuration pour opsi-client-agent (qui est le paquet de distribution de logiciel OPSI) seront copiés à partir du serveur de partage de fichiers (ex. `/opt/pcbin/install/winxppro/i386`) sur le disque dur local.

*Entretenir les informations de configuration*: Certains des fichiers de configuration et de contrôle contiennent des caractères de remplacement, qui seront mis à jour avant de commencer l'installation réelle. Avec un script spécifié (patcha-script) les espaces réservés seront remplacés par des paramètres pris dans le paquet d'informations, qui est construit à partir des fichiers de configuration et de la réponse DHCP. Par exemple dans le fichier 'unattend.txt', qui est le fichier de contrôle pour l'installation sans assistance du système d'exploitation, sera patché avec des informations spécifiques comme IP de l'hôte, IP du client, nom du client, groupe de travail, passerelle par défaut etc..

*Préparer le redémarrage*: L'enregistrements d'amorçage sera installé qui démarrera le programme d'installation de Windows au prochain redémarrage. Le fichier patché 'unattend.txt' est transmis à la configuration en tant que fichier de commande de l'installation automatique.

*Redémarrage*: Au cours de l'amorçage précédent, le canal nommé (qui indique une demande d'installation) a été éliminée, en le lisant une fois. Donc la prochaine initialisation PXE chargera la réponse netboot par défaut, qui exécute la commande 'hdboot'. Le chargeur d'amorçage locale sera lancé et la configuration de l'installation du système d'exploitation démarre.

Ces étapes sont contrôlées par un script python spécifique au système d'exploitation.

[[opsi-manual-netboot-unattended-os]]
==== Installation du système d'exploitation et d'opsi-client-agent

L'installation de l'OS est basé sur l'installation sans assistance de Microsoft. Une partie de cela est la détection du matériel standard. En plus des possibilités offertes lors de l'installation de non-OEM ou support d'installation slipstreamed, pilotes et correctifs (ex. service packs) peuvent être installés pendant l'installation initiale, rendant l'installation séparée des pilotes obsolète.

Une des caractéristiques de l'installation sans assistance est la possibilité d'engager des installations supplémentaires une fois l'installation principale terminé. Ce mécanisme est utilisé pour installer opsi-client-agent, qui met en œuvre le système automatisé de distribution de logiciels. Une entrée dans la base de registre indique la machine comme étant encore dans le 'mode de réinstallation'.

Le redémarrage final entraîne le demarrage su service opsi-client-agent pour la distribution de logiciels avant le premier login de l'utilisateur. Sur la base de la valeur de la clé de registre mentionnée ci-dessus the opsi-client-agent commute dans le 'mode de réinstallation'. Par conséquent, en ce qui concerne l'état ​​de la configuration de chaque paquet opsi, chaque paquet qui est marqué en tant que ”setup” ou état de l'installation ”installed” à l'intérieur de la configuration de ce client est installé. Après que tous logiciels client désignés ont été installés, le processus de réinstallation est terminée et l'état interne est commuté de 'mode de réinstallation' à 'mode standard'. Dans 'mode standard' seuls les logiciels qui sont marqués comme ”setup” seront installés.

[[opsi-manual-netboot-unattended-patcha]]
==== Comment fonctionne le programme Patcha

Comme mentionné ci-dessus les informations recueillies auprès du dhcp et de opsi-webservice seront utilisés pour patcher certains fichiers de configuration comme par exemple 'unattend.txt'. Le programme utilisé pour patcher est le script '/user/local/bin/patcha'.

Ce script remplace les motifs comme '#@flagname(*)#' dans un fichier avec des valeurs comme 'flagname=value' prises à partir d'un fichier de contrôle (l'entrée par défaut est '/proc/cmdline'). Dans les fichiers qui doivent être corrigés, le motif de recherche et de remplacement doit commencer par '#@', peut disposer en option de '*' après le nom du drapeau et doit avoir un ou plusieurs '#'.

Donc en appelant 'patcha <nom de fichier>' le fichier '<nom de fichier>' sera patché avec les informations extraites de '/proc/cmdline'.

En appelant 'patcha' sans aucun paramètre affichera toutes les entrées 'nom du drapeau=valeur' depuis '/proc/cmdline'.

Un fichier d'entrée différente ('another_cmdline') peut être passé à 'patcha':
 `patcha -f another_cmdline` +
Sans aucun autre paramètre 'patcha' affiche les informations tirées de 'another_cmdline'. Ce fichier d'entrée doit avoir la syntaxe 'cmdline', qui signifie avoir des entrées comme '<nom du drapeau>=<valeur>' séparés par un espace.

`patcha -f another_cmdline patchfile` +
Cela va patcher 'patchfile' avec des substitutions prises de 'another_cmdline'. 

[source,prompt]
----
Usage: patcha [-h|-v] [-f <params file>] <patch file>

Fill placeholders in file <patch file>
Options:
-v Show version information and exit
-h Show this help
-f <params file> File containig key value pairs
If option not given key value pairs from kernel cmdline are used
----
`patcha` patcht nur einen Tag pro Zeile.

Avertissement: patch a patches only the first pattern of each line.

Chaque motif sera étendu (ou réduit) à la longueur de la valeur à remplacer, puis remplacé. Des caractères de fin ne seront pas affectés.

Exemples: 

Avec le fichier d'entrée 'try.in'

[source,prompt]
----
cat try.in
tag1=hallohallohallo1 tag2=t2
----

et le fichier 'patch.me' à patcher:

[source,prompt]
----
cat patch.me
<#@tag1##########################>
<#@tag2##########################>
<#@tag1#>
<#@tag2#>
<#@tag1*##########################>
<#@tag2*##########################>
<#@tag1*#>
<#@tag2*#>
<#@tag1#><#@tag1#####>
<#@tag2*#######><#@tag1#>
----

le résultat sera:

[source,prompt]
----
./patcha -f try.in patch.me
cat patch.me
<hallohallohallo1>
<t2>
<hallohallohallo1>
<t2>
<hallohallohallo1>
<t2>
<hallohallohallo1>
<t2>
<hallohallohallo1><#@tag1#####>
<t2><#@tag1#>
----

[[opsi-manual-netboot-unattended-products]]
==== Structure des produits d'installation sans assistance

Vous trouverez les informations sur la 'Structure des produits d'installation sans assistance' dans le manuel opsi-getting-started.

[[opsi-manual-netboot-unattended-driver]]
==== Intégration simplifiée des pilotes avec liens symboliques

Vous trouverez les informations sur la 'Intégration simplifiée des pilotes avec liens symboliques' dans le manuel opsi-getting-started.

[[opsi-manual-netboot-nt6]]
=== Quelques conseils sur les produits netboot NT6 (Vista / Win7 / 2008)

Les produits netboot pour l'installation des systèmes d'exploitation de la famille NT6, contiennent un grand nombre de propriétés qui seront décrites ci-dessous.

.propriétés du produit NT6
image::netboot-win-nt6-properties_fr.png["propriétés du produit NT6",width=200]

additional_drivers:: Un ou plusieurs répertoires sous `<productid>\drivers\drivers\additional`. Tous les répertoires du pilote sous les répertoires donnés seront intégrés. S'il y a t-il un pilote d'un périphérique trouvé, aucune autre pilote sera intégré par l'intégration automatique du pilote.

askbeforeinst:: Faut-il y avoir un dialogue de confirmation avant de commencer à installer ?

boot_partition_label:: Etiquette de la 'partition de démarrage' (partition Bitlocker)

boot_partition_letter:: Lettre du lecteur de 'partition de démarrage' (partition Bitlocker)

boot_partition_size:: Taille de la 'partition de démarrage' (partition Bitlocker). 0 = ne pas créer de partition

data_partition_label:: Etiquette de la partion de données (si elle est créée)

data_partition_letter:: Lettre du lecteur de la partion de données (si elle est créée)

fullname:: Nom complet du titulaire de la licence, qui est donné au programme d'installation

imagename:: Nom de la variante du système d'exploitation

.Nom de la variante NT6
image::netboot-win-nt6-properties-imagenames.png["Nom de la variante NT6",width=200]

orgname:: Nom de l'entreprise ou de l'organisation du titulaire de la licence, qui est donné au programme d'installation

productkey:: Clé de licence pour l'installation. N'est utilisée que si `license-management.use` dans l'onglet 'Réseau et paramètres supplémentaires' est défini sur 'false'. Si c'est défini sur 'True' la clé de licence sera obtenue à partir du module de gestion des licences.

system_keyboard_layout:: Sélectionnez la langue du clavier (voir: http://msdn.microsoft.com/en-us/goglobal/bb895996 )

.Sélectionnez la langue du clavier
image::netboot-win-nt6-properties-keyboards.png["Sélectionnez la langue du clavier",width=200]

system_language:: Sélectionnez la langue du système

system_timezone:: Sélectionner le fuseau horaire

windows_partition_label:: Etiquette de la partion système (c:)

windows_partition_size:: Taille de la partition système (c:). La taille peut être donné comme pourcentage de la taille du disque dur ou comme taille absolue (G=Gigabyte). Si vous choisissez une autre valeur que '100%', le reste sera utilisé comme 'partition de données'.

.Taille de la partition système
image::netboot-win-nt6-properties-winpartionsize.png["Taille de la partition système",width=200]

winpenetworkmode:: Si 'true' le PE essaie de monter le dépôt de partage et de commencer l'installation du système d'exploitation à partir du partage (plus rapide). Si 'false' tous les fichiers d'installation seront copiés sur le disque dur et l'installation démarre à partir du disque local (plus lent).

[[opsi-manual-netboot-ntfs-image]]
=== image Ntfs (écrire et restaurer)

Les produits 'ntfs-write-image' et 'ntfs-restore-image' sont des utilitaires pour sauvegarder et restaurer des images de partitions des clients. La cible (et la source) pour le fichier image doivent être sur le serveur de dépôt OPSI et seront transférés par ssh (utilisateur pcpatch) comme spécifié en tant que propriété du produit.

[[opsi-manual-netboot-memtest]]
=== memtest

Le produit 'memtest' est un utilitaire pour effectuer un test de mémoire du client.

[[opsi-manual-netboot-hwinvent]]
=== hwinvent

Ce produit offre un inventaire du matériel du client.

[[opsi-manual-netboot-wipedisk]]
=== wipedisk

Le produit 'wipedisk' écrase le disque dur entier (partion=0) ou plusieurs partitions avec des motifs différents. Le nombre d'opérations d'écriture consécutives à effectuer est spécifié en tant que {product-property} 'itérations' (1-25).


