////
; Copyright (c) uib gmbh (www.uib.de)
; Cette documentation appartient à uib
; et publié sous licence Creative Commons by-sa allemande
; voir:
; https://creativecommons.org/licenses/by-sa/3.0/de/
; https://creativecommons.org/licenses/by-sa/3.0/de/legalcode
; anglais:
; https://creativecommons.org/licenses/by-sa/3.0/
; https://creativecommons.org/licenses/by-sa/3.0/legalcode
;
; crédits: http://www.opsi.org/credits/
////

:Author:    OpenSides sprl
:Email:     opsi@opensides.be
:Date:      01.12.2011
:Revision:  4.0.1
:toclevels: 6


include::../common/opsi_terms.asciidoc[]


[[opsi-manual-configuration-tools]]
== configuration de opsi et outils

[[opsi-manual-configuration-tools-introduction]]
=== Aperçu

La configuration d'opsi nécessite une certaine gestion des données. Tous les composants non-serveur utilisent un service Web pour échanger des données avec le serveur opsi. Ils échangent des données via 'opsiconfd', et 'opsiconfd' transmet les données au gestionnaire de backend qui passe les données dans le backend sélectionné.

opsi prend en charge différents backends: Backends:

* basé Fichier
* basé LDAP
* basé MySQL

En utilisant le backend de fichier les données sont stockées dans des fichiers texte comme les fichiers ini.

.Schema: opsi avec le backend de fichier
image::opsi_with_file_backend.png["Schema: opsi avec le backend de fichier", width=432]

En utilisant le backend mysql ou ldap les données sont stockées dans des objets de données spécifiques.

.Schema: opsi avec le backend SQL / LDAP
image::opsi_with_sql_ldap_backend.png["Schema: opsi avec le backend SQL / LDAP", width=430]


Vous trouverez plus de détails dans
////
<<opsi-manual-backends>>.
////

.Schema: couches backend et contrôle d'accès
image::opsibackend_configuration_layers.png["Schema: couches backend et contrôle d'accès", width=400]

Le répertoire de opsi 3 `/etc/opsi/backendManager.d` n'est plus utilisé dans opsi 4.

Les fichiers de configuration dans `/etc/opsi/backends` définissent les backends.

Quelle base est utilisée pour lesquels des données, est configuré dans le fichier
`/etc/opsi/backendManager/dispatch.conf`.

Le fichier `/etc/opsi/backendManager/acl.conf` définit qui a accès à quelles
méthodes.

Dans le répertoire `/etc/opsi/backendManager/extend.d` il pourrait y avoir des fichiers
définissant les méthodes étendu de opsi. Ainsi, vous trouverez ici par exemple les fichiers qui définissent les anciens méthodes 'legacy' de opsi 3 en les mappant à les nouvelles méthodes de opsi 4 (`/etc/opsi/backendManager/extend.d/20_legacy.conf`).

Vous trouverez une référence plus détaillée de ces fichiers de configuration dans
////
<<opsi-manual-important-files-etc>>.
////

[[opsi-manual-configuration-tools-opsi-setup]]
=== Outil: opsi-setup

Ce programme est quelque chose comme le 'couteau suisse' de la configuration de opsi. Il est utilisé par les scripts d'installation de opsi et peut être également appelé séparément pour le but de maintanace ou de réparation.

Les tâches de opsi-setup sont:

* enregistrer un serveur opsi comme serveur de dépôt
* corriger des droits d'accès aux fichiers
* initialiser les backends de stockage de données
* mettre à jour les backend (de 3.4 à 4.0)
* configuration du backend MySQL
* modifier les configurations par défaut
* nettoyer le(s) backend(s) courant(s)
* configurer l'essentiel du partage Samba
* configurer les entrées essentielles du dhcp


La commande `opsi-setup --help` montre les options du programme:

[source,shell]
----
opsi-setup --help

Usage: opsi-setup [options]

Options:
   -h, --help  show this help
   -l          log-level 0..9

   --log-file <path>          path to log file
   --ip-address <ip>          force to this ip address (do not lookup by name)
   --register-depot           register depot at config server
   --set-rights [path]        set default rights on opsi files (in [path] only)
   --init-current-config      init current backend configuration
   --update-mysql             update mysql backend
   --update-ldap              update ldap backend
   --update-file              update file backend
   --configure-mysql          configure mysql backend
   --edit-config-defaults     edit global config defaults
   --cleanup-backend          cleanup backend
   --auto-configure-samba     patch smb.conf
   --auto-configure-dhcpd     patch dhcpd.conf
----

Les fonctions et les options en détail:

* `--ip-address <ip>` +
Définit l'adresse IP pour '{opsi-server}' et ne résolve pas par le nom.

* `--register-depot` +
Cette option est utilisée pour enregistrer un '{opsi-server}' comme serveur de dépôt d'un autre '{opsi-server}' ('{opsi-configserver}'). Pour plus de détails voir
////
<<opsi-manual-multidepot-installation>>.
////

* `--set-rights [path]` +
Définit les droits d'accès aux fichiers dans tous les répertoires de opsi:
+
** `/tftpboot/linux`
** `/home/opsiproducts`
** `/var/log/opsi`
** `/var/lib/opsi`
** `/opt/pcbin/install`
** `/etc/opsi`
+
Vous pouvez donner un nom de répertoire comme argument pour définir uniquement les droits d'accès en dessous de ce répertoire. +
par exemple +
`opsi-setup --set-rights /opt/pcbin/install/winxppro/drivers`

* `--init-current-config` +
initialise le backend configuré. Doit toujours être appelée après modification du fichier +
`/etc/opsi/backendManager/dispatch.conf`

* Les trois commandes: +
`--update-mysql` +
`--update-ldap` +
`--update-file` +
 sont utilisées pour mettre à niveau les backends d'une version d'opsi à la suivante. +
Pour plus de détails voir le 'releasenotes-upgrade-manual'.

* `--configure-mysql` +
fait la première configuration de la base de données. +
////
Voir <<opsi-manual-backends-mysql-initializing>>.
////

* `--edit-config-defaults` +
Pour modifier les valeurs par défaut de certaines données de configuration, comme dans la 'configuration du serveur' de opsi-configed.





* `--edit-config-defaults` +
Pour modifier les valeurs par défaut de certaines données de configuration, comme dans la 'configuration
du serveur' de '{opsi-configed}'.
+
.Dialog: `opsi-setup --edit-config-defaults`
image::opsi-setup_editconfigdefaults.png["Dialog: opsi-setup --edit-config-defaults", width=400]
+
par exemple:
+
clientconfig.depot.id :: Le nom du serveur de dépôt par défaut.
+
license-management.use :: Définit si les produits netboot devraient obtenir les clés de licence depuis la gestion des licences ou à partir des propriétés du produit.
+
product_sort_algorithm :: Définit l'algorithme qui est utilisé pour calculer la séquence d'installation des produits.

* `--cleanup-backend` +
Vérifie le backend actuel(s) pour les entrées qui ne sont plus nécessaires et
l'intégrité référentielle

* `--auto-configure-samba` +
Crée les partage opsi dans le fichier de configuration `/etc/samba/smb.conf`

* `--auto-configure-dhcpd` +
Crée les entrées opsi nécessaires dans `/etc/dhcp3/dhcpd.conf. +
Ne pas utiliser si vous ne prévoyez pas d'utiliser le dhcpd sur le serveur opsi. +
Plus de détails dans le manuel 'opsi-getting-started'

[[opsi-manual-configuration-tools-opsi-configed]]
=== Outil: Management Interface: '{opsi-configed}'

[[opsi-manual-configuration-tools-opsi-configed-preconditions]]
==== Exigences et fonctionnement

'{opsi-configed}' nécessite Java 1.6 et un `opsiconfd` en exécution sur le serveur.

Si vous exécutez '{opsi-configed}' sur une machine basée sur Linux, alors assurez-vous que votre Java est la version 'Sun'. La version OpenJDK souvent installés ou d'autres versions peuvent conduire à des erreurs subtiles. Donc, vous devez installer Sun Java et le configurer comme défaut Java:

[source, shell]
----
update-alternatives –config java
----

La commande

[source, shell]
----
java -version
----

devrait aboutir à la sortie suivante:

[source, shell]
----
java version "1.6....
Java(TM) SE Runtime Environment ...
----

La plupart du temps opsi-configed sera appelé comme applet dans le navigateur via:
`https://<servername>:4447/configed`


L'application '{opsi-configed}' est également une partie du produit opsi 'opsi-adminutils' et peut alors être démarré via le menu Démarrer de Windows. Sur le serveur '{opsi-configed}' est installé dans le cadre de l'installation du serveur opsi. Il peut être démarré en utilisant l'entrée de menu ou avec la commande `/usr/bin/opsi-configed`.

Si vous êtes dans le bon répertoire, il peut également être lancé avec `java -jar configed.jar`.

L'option d'aide `java -jar configed.jar --help` montre les options disponibles en ligne de commande.

[source, shell]
----
P:\install\opsi-adminutils>java -jar configed.jar --help
starting configed
default charset is windows-1252
server charset is configured as UTF-8

configed [OPTIONS]...

Options:
     -l, --locale    Set locale (format: <language>_<country>)
     -h, --host      Configuration server to connect to
     -u, --user      Username for authentication
     -p, --password  Password for authentication
     -d, --logdirectory Directory for the log files
         --help      Show this text
----

[[opsi-manual-configuration-tools-opsi-configed-login]]
==== Connexion

.'{opsi-configed}': masque de connexion
image::opsi-configed-login.png["opsi-configed: login mask", width="90mm"]

Au moment de la connexion opsi-configed tente de se connecter au serveur opsi via https. La connexion se fait avec les paramètres donnés 'opsi server[:Port]' (default port 4447 – opsiconfd) et l'utilisateur/mot de passe du compte '{opsi-configserver}'. Pour la connexion l'utilisateur fourni doit être un membre du groupe unix 'opsiadmin'.

[[opsi-manual-configuration-tools-opsi-configed-copy]]
==== Copier-Coller, Glisser-Déposer

Vous pouvez copier les entrées sélectionnées de presque chaque section de '{opsi-configed}' dans le presse papier en utilisant les combinaisons de touche standard ('Strg-Insert', 'Strg-C'). Ceci peut être utilisé pour transférer des données intéressantes à d'autres programmes. Pour la plupart des tables vous pouvez également utiliser le 'Glisser-Déposer' pour copier les données vers des programmes comme 'Excel'.

NOTE: Depuis la version Java 1.6.24 Oracle a désactivé le 'Copier-Coller' vers et à partir du presse-papiers du système à partir d'un applet Java ne pas signée, pour des raisons de sécurité. L'application opsi configed est livré avec la signature depuis la version 4.0.1.11, et a maintenant accès au système complet.


[[opsi-manual-configuration-tools-opsi-configed-mode-selection]]
==== Configuration du client / configuration du serveur / gestion des licences

Pour basculer entre les différentes vues de '{opsi-configed}', utiliser les boutons dans le coin supérieur droit.

.'{opsi-configed}':  Boutons pour (de gauche à droite): Configuration du client, Configuration du serveur, Gestion des licences
image::opsi-configed-mode-selection.png["{opsi-configed}:  Buttons for (from left to right): Client configuration, Server configuration, License management", width="50mm"]

[[opsi-manual-configuration-tools-opsi-configed-depot-selection]]
==== Sélection dépôt

Tous les '{opsi-depot}s' intégré à votre serveur sont répertoriés dans le coin supérieur gauche de '{opsi-configed}'. Par défaut '{opsi-depot}' sur votre '{opsi-config-server}' est sélectionné et les clients appartenant à ce '{opsi-depot}' sont montrés. Si vous sélectionnez plusieurs '{opsi-depot}s' (de la façon habituelle de sélection multi élément dans une liste , par exemple avec shift/ctrl + click) vous devez 'recharger toutes les données' (à partir du menu Fichier) pour obtenir des effets. Si le jeu de serveur sélectionné n'est pas synchrone vous sera dit. Sinon la liste des clients des dépôts combiné est montré, et leurs configurations peuvent être modifiées.

.'{opsi-configed}': sélection dépôt
image::opsi-configed-mode-depotselection.png["{opsi-configed}: depot selection", width="52mm"]


[[opsi-manual-configuration-tools-opsi-configed-client-selection]]
==== Sélection des clients unique et configuration de groupe

Après une connexion réussie la fenêtre principale s'ouvre et affiche l'onglet 'Client selection'.
Cet onglet affiche la liste des clients connus des '{opsi-depot}' sélectionnés
ou les clients qui sont sélectionnées en utilisant le 'contrôle treeview' sur le côté gauche de '{opsi-configed}'.
////
<<opsi-manual-configuration-tools-opsi-configed-treeview>>
////


.'{opsi-configed}': masque de sélection des clients
image::opsi-configed-clientselection.png["{opsi-configed}: client selection mask", width=400]


Vous pouvez sélectionner une ligne de la liste non seulement par défilement manuel et en choisissant mais aussi
par une chaîne de recherche. Cela exige que vous entrez une chaîne dans le champ de recherche au sommet de la liste
Dans la liste une ligne peut également être sélectionnée par la recherche d'une valeur de chaîne.

Le fonctionnement de la recherche est déterminée par les éléments sélectionnés dans deux listes déroulantes:

Via la sélection des champs vous décidez si

* tous les champs (plus précisément, tous les champs qui se produisent sous forme de colonnes) sont recherchés (par défaut), ou

* un seul champ  (et celui qui) est recherché.

Concernant la méthode de recherche vous devez choisir si est définie

* comme occurrence de la chaîne de recherche n'importe où dans une valeur de champ (recherche de chaîne partielle, par défaut),

* comme occurrence de la chaîne de recherche au début d'une valeur d'un champ

* comme une correspondance de motif dans une recherche d'expression régulière où la chaîne de recherche sert de modèle (pour les experts,
basé sur la recherche de motifs java).

La touche entrée conduit à la recherche suivante. Plus de fonctions de sélection basées sur la recherche de chaîne sont indiqués dans le menu contextuel
du champ de recherche.

.'{opsi-configed}': Fonction de recherche dans la liste de sélection des clients
image::opsi-configed-clientselection-search.png["{opsi-configed}: Client search", width=200 ]



[[opsi-manual-configuration-tools-opsi-configed-client-selection-table]]
===== La liste des clients

La liste des clients a par défaut les colonnes 'client name', 'description', 'on', 'IP address' et 'last seen'.

* 'client name' est le 'nom d'hôte complet qualifié' qui est le nom du client, y compris le nom de domaine

* 'description' est une description libre sélectionnable que vous pouvez éditer dans la partie supérieure droite de la fenêtre

* 'On' montre après avoir cliqué sur le bouton 'Check wich clients are connected' (Vérifiez quels clients sont connectés) le résultat de cette requête.


.'{opsi-configed}': Bouton 'Vérifiez quels clients sont connectés'
image::opsi-configed-connected.png["{opsi-configed}: Button: Check which clients are connected", width="40"]


* 'IP address' indique le numéro IP à laquelle le serveur OPSI résout le nom du client.

* 'last seen' indique la date et l'heure du dernier client qui s'est connectè au service web opsiconfd

Certaines colonnes sont désactivées par défaut:

* 'session infos' (les données sont extraites du système d'exploitation s'exécutant sur le client spécifique)

* 'Inventory No' (affiche certaines données en option)

* 'created' (date et heure de création du client)

* 'opsi mac address' (adresse matérielle du client utilisé par opsi)

Vous pouvez activer ces colonnes à l'aide du menu contextuel. La configuration des colonnes activés peut être modifié en utilisant l'entrée 'configed.host_displayfields'
dans la configuration du serveur.

.'{opsi-configed}': changer la valeur par défaut pour les colonnes visibles dans la liste des clients
image::opsi-configed-config-host-displayfields.png["{opsi-configed}: change the default for visible columns in the clients list", width="82mm"]

L'ajout de la colonne 'session infos' active le bouton "request session infos from all clients" dans le panneau des boutons.

.'{opsi-configed}': Bouton 'Sessioninfo?'
image::opsi-configed-sessioninfo.png["{opsi-configed}: Buton SessionInfo?", width="40"]


Lorsque ce bouton est cliqué '{opsiconfd}' tente de se connecter à tous les clients et de récupérer les données des
sessions utilisateur actives. A partir du résultat, les noms de compte sont indiqués dans la colonne 'session infos'.
Au lieu d'utiliser le bouton vous pouvez démarrer la requête uniquement pour les clients sélectionnés via le menu contextuel
ou à l'entrée du menu principal de 'OpsiClient'. Comme ça on évite d'attendre le timeouts du réseau.

Puisque la fonction de recherche pour la liste client fonctionne (si n'est pas configuré autrement) sur toutes les colonnes affichées
vous pouvez maintenant trouver quel est le client appartenant à un utilisateur connecté (avec le nom de compte connu).






Pour trier les clients par une certaine colonne cliquez sur l'entête de haut de cette colonne.


[[opsi-manual-configuration-tools-opsi-configed-client-selection-selecting]]
===== Sélection des clients

Vous pouvez sélectionner un ou plusieurs clients pour travailler avec. Le point de vue du client peut être restreint à des clients sélectionnés en cliquant sur l'icône entonnoir ou dans le menu à 'Grouping / Show only selected clients'(Groupement / Afficher seulement les clients sélectionnés).

Un groupe de clients sélectionnés peuvent être enregistrés avec l'icône 'Save grouping' (Enregistrer regroupement) ou à partir du menu à 'Grouping / save group' (Groupement / Enregistrer le groupe) introduisant le nom de votre choix.

Vous pouvez utiliser la souris pour ajouter les clients sélectionnés dans un groupe existant (en les faisant glisser dans un groupe existant qui est affiché dans l'arborescence).

Dans la boîte de dialogue de sélection des clients (appelé via le menu 'Sélection / Préciser la recherche') les clients peuvent être sélectionnés en utilisant une variété de critères basés sur leurs configurations.

.'{opsi-configed}':  masque: sélection des clients
image::configed_clientselection.png["{opsi-configed}:  mask: client selection", width="73mm"]

Par exemple, il est possible de rechercher des produits opsi installés ainsi que des logiciels tels que trouvés par l'audit logiciel d'OPSI (swaudit). Vous pouvez ainsi rechercher les
PC satisfaisant certaines des conditions matérielles. Les critères peuvent être combinés par des opérateurs logiques 'and' ou 'or'. La négation est également possible.
Les chaînes de recherche peuvent être donnés sous forme de chaînes fixes combinés avec des astérisques '*' en tant que symboles génériques.

Les définitions de recherche peuvent être enregistrés, puis de nouveau utilisé via le menu 'Sélection/Utilisez définitions de recherche sauvegardée'.

.'{opsi-configed}': recherches enregistrées
image::configed_clientselection2.png["{opsi-configed}: recherches enregistrées"]

Il est également possible d'exécuter une recherche enregistrée à partir de la ligne de commande lorsque l'éditeur de opsi-configed est lancé.  En incluant le drapeau "-qs" et le nom de la recherche enregistrée, l'éditeur de configuration démarre
avec les résultats de recherche enregistrés.  Si le nom est omis, alors une liste de recherches disponibles seront affichés.


[[opsi-manual-configuration-tools-opsi-configed-treeview]]
==== Sélection des clients et groupes hiérarchiques en utilisant treeview

Depuis opsi 4.0 il est possible de gérer des groupes et des clients utilisant un contrôle d'arborescence sur le côté gauche de '{opsi-configed}'. Une deuxième amélioration est la possibilité de groupes hiérarchiques (groupes dans les groupes). Cette fonctionnalité tree view fait partie d'un projet de co-financement et ne fonctionne qu'avec un fichier d'activation valide. Les frais d'activation sont 500 €. Pour l'évaluation s'il vous plaît contactez info@uib.de.
The tree view control has base node 'ALL' with all groups and clients beyond..


[[opsi-manual-configuration-tools-opsi-configed-treeview-principle]]
===== Les concepts de base

Le contrôle TreeView a base de noeud 'ALL' avec tous les groupes et les clients au-dessus. Il y a un autre nœud 'Groups' qui est le groupe de base pour toutes les autres groupes définis automatiquement.

.'{opsi-configed}': Treeview avec les clients et les groupes
image::opsi-configed-treeview1.png["{opsi-configed}: Treeview with clients and groups", width="66mm"]

Il y a un groupe supplémentaire 'REPORTED_FAILURES' qui contient tous les clients, qui ont un résultat de l'action 'failed' (échoué).

Chaque client connu est toujours dans le groupe 'ALL'. En outre, un client peut être dans un ou plusieurs autres groupes. Vous pouvez construire des arbres de groupe différent qui représentent critères d'ordre différent, comme la structure administrative, matérielle ou l'inventaire logiciel typique.

Si vous sélectionnez un client, les icônes de tous les groupes auxquels le client sélectionné appartiennent seront colorés.

[[opsi-manual-configuration-tools-opsi-configed-treeview-howto]]
===== Comment faire ...

Par un clic sur un nœud (ou un groupe) tous les clients au-dessus de ce nœud seront affichés dans l'onglet 'Clients', mais aucun de ces clients est sélectionné pour le traitement.

Par un clic sur un client, ce client sera affiché dans l'onglet 'Clients' est sélectionné pour le traitement. Vous pouvez également utiliser ce moyen pour changer le client sélectionné alors que vous êtes dans un autre onglet, comme pour la configuration du produit sans revenir à l'onglet clients.

Vous pouvez utiliser Ctrl-click et Shift-click pour sélectionner plusieurs clients.
Ce contrôle TreeView montre les groupes qui sont créés selon le chapitre
////
<<opsi-manual-configuration-tools-opsi-configed-client-selection-selecting>>.
////
Vous pouvez également créer des groupes en utilisant le menu contextuel dessus de 'ALL' ou tout autre groupe existant.

.'{opsi-configed}': Utiliser le menu contextuel pour créer un nouveau sous-groupe
image::opsi-configed-treeview-generate-group.png["{opsi-configed}: Using the context menu to create a new subgroup", width="49mm"]

Il vous sera demandé le nouveau nom du groupe.

.'{opsi-configed}': Boîte de dialogue: nom du groupe
image::opsi-configed-treeview-groupname.png["{opsi-configed}: Dialog: Group name", width="46mm"]

Un groupe peut être peuplées avec des clients à l'aide du glisser-déposer avec

* copie des clients à partir de l'onglet 'Clients' vers le groupe dans l'arborescence
(bouton gauche de la souris)
* copie des clients à partir de l'arborescence sous le nœud 'ALL' vers le groupe dans l'arborescence (bouton gauche de la souris)
* déplacement d'un groupe de clients dans l'arborescence vers un autre groupe dans l'arborescence (bouton gauche de la souris)
* copie des clients d'un groupe de l'arborescence dans un autre groupe de l'arborescence (Ctrl-bouton gauche de la souris)

[[opsi-manual-configuration-tools-opsi-configed-client-editing]]
==== Traitement des clients / Actions des clients

En utilisant le menu 'OpsiClient' ou le menu contextuel de l'onglet 'Clients' vous pouvez choisir parmi un grand nombre d'opérations spécifiques du client

.'{opsi-configed}': : menu contextuel de l'onglet 'Clients'
image::opsi-configed-client-contextmenu.png["{opsi-configed}: : context menu 'Clients' Tab", width="51mm"]

[[opsi-manual-configuration-tools-opsi-configed-client-editing-wakeonlan]]
===== WakeOnLan ('Réveillez les clients sélectionnés')
Choisissant cette entrée de menu, vous allez envoyer aux clients sélectionnés un signal WakeOnLan.

[[opsi-manual-configuration-tools-opsi-configed-client-editing-ondemand]]
=====  Déclencher l'événement 'on_demand' (Push Installation)

Cette entrée de menu est utilisé pour envoyer à '{opsi-client-agent}' sur les clients sélectionnés une commande pour déclencher l'événement 'on_demand' (sur demande). Cet événement commencera le traitement de la demande d'action immédiatement. Tous les messages seront affichés sur le bureau actif. Si le client n'est pas joignable, vous obtiendrez un message.

Qu'est-ce qui se passe exactement if you fire the event 'on_demand' can be configured in the event 'on_demand' configuration.

[[opsi-manual-configuration-tools-opsi-configed-client-editing-send-message]]
===== Envoi de messages ('Show popup message')

Choisissant l'entrée de menu 'Show popup message' (Voir le message contextuel) vous aurez une petite fenêtre où vous pouvez saisir votre message.

.'{opsi-configed}':  opsi message edit mask
image::opsi-configed-client-message-editing.png["{opsi-configed}:  opsi message edit mask", width="51mm"]

En cliquant sur ​​la case rouge, vous envoyez le message aux clients sélectionnés.

Une fenêtre de message apparaîtra aux clients sélectionnés.

.'{opsi-configed}':  opsi message display dialog
image::opsi-configed-client-message-reading.png["{opsi-configed}:  opsi message display dialog", width="53mm"]

[[opsi-manual-configuration-tools-opsi-configed-client-remotecontrol]]
===== Appel des outils externes de contrôle à distance pour des clients sélectionnés

L'option 'Remote Control Software call' (appel logiciel de contrôle à distance) dans le menu contextuel du client ainsi que le menu principal du client (depuis '{opsi-configed}' version 4.0.1.11) est très puissant. Il peut être utilisé
pour utiliser n'importe quelle commande que le système d'exploitation offre, paramétrée par exemple par le nom du client.

Par exemple il existe des configurations généré automatiquement qui peuvent être utilisé pour envoyer un `ping` pour le client sélectionné:
une commande `ping` qui fonctionne en environnement Windows et une commande qui exige un environnement X Linux. S'il vous plaît observez:
  '{opsi-configed}' appelle de toute évidence la commande dans son environnement, par exemple, nous avons besoin de la commande Linux lorsque '{opsi-configed}'
  tourne sous Linux.

.'{opsi-configed}': Choix de l'appel de contrôle à distance
image::opsi-configed-client-remotecontrol-choice.png["{opsi-configed}: Choice of Remote Control call", width="52mm"]

La fenêtre de sélection comporte trois parties. La partie supérieure énumère les noms des commandes existantes. Une ligne suit, qui montre
la commande sélectionnée et offre la possibilité de la modifier (si cela est autorisé). De plus, la ligne contient les boutons
pour exécuter ou abandonner l'action. La troisième
zone de texte de la fenêtre capture les messages qui sont retournés par le système d'exploitation lors
de l'appel de la commande.

Ces appels offrent une gamme quasi infinie de possibilités. Par exemple, une commande peut être configuré pour ouvrir
une connexion Remote Desktop pour le client sélectionné (si elle permet de telles connexions). Sur un système Windows, la commande
est

`cmd.exe /c start mstsc /v:%host%`

Dans un environnement Linux, la commande suivante peut être utilisée:

`rdesktop  -a 16 %host%`

Dans les exemples `%host%` est une variable, dont '{opsi-configed}' remplace automatiquement
par la valeur de l'hôte sélectionné. D'autres variables qui sont de façon analogue utilisé dans les commandes sont
`%ipaddress%` et `%inventorynumber%`.

Si la commande est marquée par l'entrée supplémentaire 'editable' comme `true`,
la ligne de commande permet l'édition ad hoc. Par exemple, vous pouvez ajouter un mot de passe demandé ou varier
la commande si nécessaire.

Si plus d'un client est sélectionnée, la commande sera exécutée dans un thread propres à chaque client.

La liste des commandes de contrôle à distance
est modifiable via les entrées de configuration du serveur (voir
<<opsi-manual-configuration-tools-opsi-configed-hostproperties>>).


Pour définir une commande `example`, au minimum une entrée `configed.remote_control.example`
(ou `configed.remote_control.example.command`) doit être généré. La valeur de la propriété doit être la commande
(dans laquelle les variables `%host%`, `%ipaddress%` etc. peuvent être utilisées). En plus, une entrée `configed.remote_control.example.description`
peut être défini. La valeur de cette entrée sera affiché comme info-bulle (si n'existe pas, la commande elle-même servira de contenu info-bulle).
Par ailleurs, une entrée booléenne `configed.remote_control.example.editable` peut être ajoutée. Si sa valeur est fixée à `false` la commande
ne peut pas être modifiés dans la fenêtre de sélection.


.'{opsi-configed}': Modification des commandes de contrôle à distance dans l'éditeur des propriétés du serveur
image::opsi-configed-properties-remotecontrol.png["{opsi-configed}: Editing of remote control commands in the server properties editor ", width="110 mm"]



[[opsi-manual-configuration-tools-opsi-configed-client-editing-shutdown]]
===== Arrêt / redémarrage des clients sélectionnés

Vous pouvez envoyer aux clients sélectionnés un signal d'arrêt ou de redémarrage. Vous devez confirmer cette commande à opsi-configed.

CAUTION: Si le client a reçu le signal, il s'éteindra sans plus de questions.

[[opsi-manual-configuration-tools-opsi-configed-client-editing-manage]]
===== Supprimer, créer, renommer et déplacer des clients

Vous pouvez supprimer les clients sélectionnés à partir du '{opsi-server}'.

Si vous choisissez de créer un client, un masque de saisie s'ouvre. Vous entrez ou confirmez les données requises – nom du client sans spécification de domaine, nom de domaine, nom du serveur de dépôt. Vous pouvez ajouter une description textuelle pour ce client et des notes sur ce client.

.'{opsi-configed}':  création d'un client
image::opsi-configed-client-new.png["{opsi-configed}:  création d'un client", width="54mm"]

Le masque contient également des champs pourune déclaration facultative de l'adresse IP et de l'adresse MAC d'un client. Si le backend est activé pour la configuration d'un serveur dhcp locale (qui n'est pas le paramètre par défaut), cette information sera utilisée pour faire connaitre le nouveau client au serveur dhcp. Sinon, l'adresse MAC sera enregistré dans le serveur et l'adresse IP sera rejeté.

Vous pouvez renommer un client sélectionné, il vous sera demandé le nouveau nom.

Le déplacement d'un client à un serveur de dépôt différents. Si vous cliquez, les fenêtres suivantes s'affichent avec une liste de serveurs de dépôt existant

.'{opsi-configed}': changer le dépôt d'un client
image::opsi-configed-client-change-depot.png["{opsi-configed}: changer le dépôt d'un client", width="53mm"]

[[opsi-manual-configuration-tools-opsi-configed-productconfiguration]]
==== Configuration des produits

En passant à l'onglet 'Product configuration' (Configuration des produits) vous obtenez une liste de paquets logiciels disponibles avec leur statut d'installation et le statut d'action pour les clients sélectionnés.

.'{opsi-configed}': masque de configuration des produits
image::opsi-configed-localbootproducts.png["{opsi-configed}: masque de configuration des produits", width=400]

S'il y a un statut différent pour les clients sélectionnés ce sera marquée en gris ('undefined'). La liste des clients sélectionnés est indiqué à droite en haut.

Vous pouvez également trier la liste des produits en cliquant sur ​​l'entête de colonne.

Ceci sont les colonnes:

* 'Status' (Statut) est le dernier état du produit et peut contenir les valeurs 'installed' (installé) , 'not_installed' (non installé) , 'unknown' (inconnus). Le tableau montre une cellule vide si la valeur est 'not_installed'  pour améliorer la convivialité de la vue. La cellule devient gris si une multitude de clients sont sélectionnés et ne partagent pas une valeur commune (la coloration grise représente la valeur pseudo 'mixed').

* 'Report' informe sur les progrès ou le résultat de la dernière action en utilisant le modèle <action result> (<last action>). Lors d'un processus d'installation il peut indiquer 'installing' (installant) , ensuite par exemple 'failed(setup)' (échoué (installation)) ou 'success (uninstall)' (succès (désinstaller)).

* La colonne 'Requested action' (Action demandé) détient les informations sur l'action qui sera exécuté. Les valeurs possibles sont 'none' (montré par une cellule vide) et les types d'action pour lesquels les scripts sont définis dans le paquet du produit (valeurs possibles sont 'setup' (installer), 'uninstall' (désinstaller), 'update' (mise à jour), 'once' (une fois), 'always' (toujours), 'custom' (personnalisé)).

* Le champ 'Version'  affiche le numéro de version du logiciel combiné avec le numéro du paquet opsi du logiciel installé sur le client.

Il y a deux colonnes supplémentaires qui peuvent être activées via le menu contextuel:

* 'Priority class' affiche une valeur de priorité qui est attribué au produit (priorité la plus élevée +100, priorité la plus faible -100). Elle influe sur l'ordre d'installation des produit (en vertu de product_sort_algorithm)

* La colonne 'position' column displays the product ordering forecast for installation sequences.

Choisissez un logiciel pour obtenir plus d'informations sur le produit dans la partie droite de la fenêtre, comme:

* 'Complete product name': nom complet du produit de ce paquet logiciel.

* 'Software/package version': 'version du logiciel'-'version du paquet opsi'  du progiciel (spécifié dans le paquet d'installation opsi).

* 'Product description': texte libre pour décrire le logiciel.

* 'Hints': texte libre avec conseils et avertissements pour la manipulation du paquet.

* 'Requirements': Une liste des autres produits dont le produit sélectionné (dit 'A') dépend combiné avec le type de dépendance: 'required' signifie que A exige l'autre produit ('B'), mais peu importe si B est installé avant ou après A. 'pre-required' signifie que B doit être installé avant A. 'post-required' signifie que B doit être installé après A.

* 'Configuration for client': Il est possible de définir des propriétés supplémentaires pour un produit. Leurs valeurs peuvent être évaluées dans un script de configuration pour configurer le produit par client. En raison de la complexité intrinsèque d'une définition de la propriété il y a un élément d'interface spécifiques pour afficher et éditer la table des propriétés:

[[opsi-manual-configuration-tools-opsi-configed-property-editing]]
==== Tableaux de propriété with list editor windows

Une table de propriété est un tableau à deux colonnes. Dans chaque ligne, la première colonne contient un nom de propriété,  la deuxième colonne affiche la valeur(s) attribuée à la propriété.

Il peut être configuré pour qu'une info-bulle s'affiche avec quelques informations sur le sens de la propriété et la valeur par défaut.

.'{opsi-configed}': Table de propriété avec info-bulle
image::opsi-configed-editlist1.png["{opsi-configed}: Table de propriété avec info-bulle ", width="63mm"]


Si vous cliquez sur une valeur, une fenêtre s'ouvre: l'éditeur de liste ('list editor') pour cette propriété. Il montre une valeur, respectivement une liste de pré valeurs configurées avec la valeur actuelle comme sélectionné.

.'{opsi-configed}':  éditeur de liste, liste de sélection
image::opsi-configed-editlist2.png["{opsi-configed}:  éditeur de liste, liste de sélection", width="55mm"]


En cliquant une nouvelle valeur modifie la sélection.

Si la liste des valeurs de la propriété est modifiable (des nouvelles valeurs peuvent être ajoutés à la liste existante resp. existing values changed) la fenêtre vient avec un champ d'édition pour les valeurs nouvelles ou modifiées.

.'{opsi-configed}': éditeur de liste, champ d'édition
image::opsi-configed-editlist3.png["{opsi-configed}: éditeur de liste, champ d'édition", width="55mm"]

La façon la plus confortable pour obtenir une nouvelle valeur qui est une variante d'une valeur existante est de double-cliquer sur la valeur existante dans la liste. Cela copie la valeur dans le champ d'édition où elle peut être modifié.

Dès que le champ d'édition contient une nouvelle valeur – pas encore présent dans la liste des valeurs – le bouton plus est activé par lequel la nouvelle valeur peut être ajoutée à la liste des valeurs.

Si plusieurs valeurs sont permises – comme il faut par exemple pour la propriété 'additional drivers' – une valeur peut être ajoutée à l'ensemble des valeurs sélectionnées par Strg-Click . La même action supprime la valeur de l'ensemble. Le bouton moins (depuis opsi-configed en version 4.0.2) efface complètement la sélection.

Lorsque la liste a été éditée la coche verte devient rouge comme d'habitude dans opsi-configed. En cliquant dessus, la nouvelle sélection devient la nouvelle valeur de la propriété (et termine l'édition). En cliquant sur ​​le bouton bleu annuler, l'édition s'arrête réinitialisant la valeur d'origine.

[[opsi-manual-configuration-tools-opsi-configed-netbootproducts]]
==== Produits Netboot

Les produits sous l'onglet 'Netboot products' sont principalement utilisés pour installer le système d'exploitation client et sont répertoriés et configurés comme les produits sous l'onglet 'Product configuration'.

Si pour le(s) client(s) sélectionné(s) un produit netboot est réglé sur 'setup', l'image de démarrage correspondant sera chargé et exécuté au prochain redémarrage du client.

.'{opsi-configed}': masque pour lancer l'image de démarrage
image::opsi-configed-netbootproducts.png["{opsi-configed}: masque pour lancer l'image de démarrage", width=400]

Cela se fait généralement pour démarrer une installation de l'OS ou toute autre tâche de l'image de démarrage (comme un test de mémoire, etc.)

[[opsi-manual-configuration-tools-opsi-configed-hardwareinformation]]
==== Informations sur le matériel

Avec cet onglet, vous obtenez les dernières informations matérielles détecté pour ce client (disponible uniquement si un seul client est sélectionné).

.'{opsi-configed}': Informations sur le matériel pour le client sélectionné
image::opsi-configed-hardwareinformation.png["{opsi-configed}: Informations sur le matériel pour le client sélectionné", width=400]

[[opsi-manual-configuration-tools-opsi-configed-softwareinventory]]
==== L'inventaire logiciel

Avec cet onglet, vous obtenez les dernières informations logiciels détecté pour ce client (disponible uniquement si un seul client est sélectionné).

.'{opsi-configed}': Informations sur les logiciels pour le client sélectionné
image::opsi-configed-softwareinventory.png["{opsi-configed}: Informations sur les logiciels pour le client sélectionné", width=400]


[[opsi-manual-configuration-tools-opsi-configed-logfiles]]
==== Journaux système: Journaux du client et du serveur

Les journaux système spécifique au client sont stockées sur le serveur et visible avec opsi-configed via l'onglet 'log files'.

Il est également possible de rechercher dans ces fichiers (pour continuer la recherche, appuyez 'F3' ou 'n').


.'{opsi-configed}': Affichage du journal système dans opsi-configed
image::opsi-configed-logfiles.png["{opsi-configed}: Affichage du journal système dans opsi-configed", width=400]


[[opsi-manual-configuration-tools-opsi-configed-hostproperties]]
==== Paramètres de l'hôte dans la configuration du client et du serveur



Il y a de nombreuses options de configuration pour le serveur et les clients opsi
qui peuvent être initialisée ou changée via l'onglet 'Host parameters'. Ainsi, les options par défaut du serveur sont
définies dans le mode 'server configuration', les valeurs spécifiques du client
dans le mode 'client configuration' ainsi que la sélection manuelle dans l'onglet des 'Host parameters'
(voir aussi <<opsi-manual-configuration-tools-opsi-configed-mode-selection>>).

En principe, ces entrées de configuration ('config objects' du '{opsi-server}')
sont conçus comme des listes de valeurs. Donc ils sont
édités via l'outil de l'éditeur de liste (voir
<<opsi-manual-configuration-tools-opsi-configed-property-editing>>).

En fonction de la définition précise d'un objet de configuration

- les valeurs d'une liste peuvent être de type texte (`Unicode`) ou de type `Boolean` (par exemple `true`/`false`);

- la liste peut avoir qu'un seul élément ou peut être une véritable liste avec plusieurs membres;

- l'ensemble des valeurs à partir de laquelle des éléments de liste sont sélectionnés peuvent être fixes ou extensibles.

Les nouvelles configurations des entrées, des types de unicode (extendible) et boolean (fixed) peuvent être créés
via le menu contextuel. Il offre également la possibilité de supprimer les entrées existantes.

La relation des entrées du serveur et du client est compliquée.

- Les entrées du serveur détiennent les valeurs par défaut pour les entrées du client.

- Quand une entrée du serveur (un objet de configuration) est supprimé les entrées dépendants du client (états de configuration) disparaissent aussi.

- La création d'une entrée client via '{opsi-configed}' entraîne la création automatique d'une appropriée valeur par défaut du serveur.

- La suppression d'une entrée client via '{opsi-configed}' supprime uniquement la valeur client spécifique (si elle existe) mais
laisse les valeurs par défaut du serveur (qui seront valables pour le client).

- Pour le moment '{opsi-configed}' n'indique pas si une valeur spécifique du client existe ou si la valeur
par défaut du serveur est utilisé par le client.

- Il ya des objets de configurations pour lesquelles des valeurs du client peuvent être créées et éditées, mais seulement les objets
du serveur sont utilisés (par exemple les entrées de '{opsi-configed}', commençant par 'configed.').



.'{opsi-configed}': Onglet Paramètres de l'hôte (Configuration du serveur et du client)
image::opsi-configed-hostparameters.png["{opsi-configed}: Onglet Paramètres de l'hôte (Configuration du serveur et du client)", width=400]

[[opsi-manual-configuration-tools-opsi-configed-depotconfiguration]]
==== Configuration du dépôt

Dans le mode 'Properties of depots' vous verrez l'onglet 'Dépôts'. Il y a un menu déroulant pour sélectionner le dépôt. Après avoir sélectionné le dépôt, vous pouvez modifier les propriétés de '{opsi-depot}'.

voir aussi:
////
<<opsi-manual-configuration-tools-opsi-configed-mode-selection>>)
////

.'{opsi-configed}': Onglet de configuration Dépôt
image::opsi-configed-depotconfiguration.png["{opsi-configed}: Onglet de configuration Dépôt", width=400]

[[opsi-manual-configuration-tools-opsi-package-manager]]
=== Outil: opsi-package-manager: (dé-)installer les paquets opsi

`opsi-package-manager` est utilisé pour (dé-)installer un {opsi-product-packages} sur un serveur opsi.

Afin d'installer un {opsi-product-package}, le {opsi-product-package} doit être lisible pour l'utilisateur opsiconfd. C'est pourquoi il est fortement recommandé d'installer ces paquets à partir du répertoire /home/opsiproducts (ou un sous-répertoire).

Le journal système de 'opsi-package-managers' vous le trouverez à '/var/log/opsi/package.log'.

Installer un paquet (sans poser de questions):

[source, shell]
----
opsi-package-manager -i softprod_1.0-5.opsi'
----

Installer un paquet (posant des questions):

[source, shell]
----
opsi-package-manager -p ask -i softprod_1.0-5.opsi
----

Installer un paquet (et le commutateur d'action nécessaires, pour la configuration, lorsqu'il est installé):

[source, shell]
----
opsi-package-manager -S -i softprod_1.0-5.opsi
----

Désinstaller un paquet (sans poser de questions):

[source, shell]
----
opsi-package-manager -r softprod
----

Extraire et renommer un paquet:

[source, shell]
----
opsi-package-manager -x opsi-template_<version>.opsi --new-product-id myprod
----

Appeler `opsi-package-manager` avec l'option `--help` donne une liste des options possibles.

S'il vous plaît remarquez:

* L'option `-d` ou `--depots` sont réservées à l'usage dans un environnement multi serveur de dépôt.

* En utilisant l'option `-d` le paquet opsi sera copié dans le répertoire `/var/lib/opsi/repository` du serveur cible avant l'installation. S'il vous plaît assurez-vous qu'il y a suffisamment d'espace libre sur ce système de fichiers.

voir aussi:
////
<<opsi-manual-multidepot>>
////


[source, shell]
----
#opsi-package-manager --help

usage: opsi-package-manager [options] <command>

Manage opsi packages

Commands:
  -i, --install      <opsi-package> ...      install opsi packages
  -u, --upload       <opsi-package> ...      upload opsi packages to repositories
  -l, --list         <regex>                 list opsi packages matching regex
  -D, --differences  <regex>                 show depot differences of opsi packages matching regex
  -r, --remove       <opsi-product-id> ...   uninstall opsi packages
  -x, --extract      <opsi-package> ...      extract opsi packages to local directory
  -V, --version                              show program's version info and exit
  -h, --help                                 show this help message and exit

Options:
  -v, --verbose                    increase verbosity (can be used multiple times)
  -q, --quiet                      do not display any messages
  --log-file         <log-file>    path to debug log file
  -d, --depots       <depots>      comma separated list of depot ids to process
                                      all = all known depots
  -p, --properties   <mode>        mode for default product property values
                                      ask     = display dialog
                                      package = use defaults from package
                                      keep    = keep depot defaults (default)
  --purge-client-properties        remove product property states of the installed product(s)
  -f, --force                      force install/uninstall (use with extreme caution)
  -U, --update                     set action "update" on hosts where installation status is "installed"
  -S, --setup                      set action "setup" on hosts where installation status is "installed"
  -o, --overwrite                  overwrite existing package on upload even if size matches
  -k, --keep-files                 do not delete client data dir on uninstall
  -t, --temp-dir     <path>        tempory directory for package install
  --max-transfers    <num>         maximum number of simultaneous uploads
                                      0 = unlimited (default)
  --max-bandwidth    <kbps>        maximum transfer rate for each transfer (in kilobytes per second)
                                      0 = unlimited (default)
  --new-product-id   <product-id>  set a new product id when extracting opsi package
----

[[opsi-manual-configuration-tools-opsi-productupdater]]
=== Outil: `opsi-product-updater`
L'utilitaire en ligne de commande `opsi-product-updater` est conçu pour télécharger et installer des paquets opsi confortablement depuis un dépôt ou d'un autre serveur opsi. L'usage de opsi-product-updater rendre facile de maintenir le serveur opsi à jour. Il peut être également utilisé dans une tâche cron pour garder le serveur de dépôt en synchronisation avec le serveur de configuration.

[source, shell]
----
# opsi-product-updater --help

Usage: opsi-product-updater [options]
Options:
    -h    Show this help text
    -v    Increase verbosity (can be used multiple times)
    -V    Show version information and exit
    -c    Location of config file

----

Les caractéristiques principales sont:

* dépôts paramétrables
* actions paramétrables

Toute la configuration se fera dans le fichier de configuration `/etc/opsi/opsi-product-updater.conf`.

[[opsi-manual-configuration-tools-opsi-productupdater-repositories]]
==== Dépôts paramétrables

Les dépôts sont les sources qui seront utilisées par opsi-product-update pour récupérer des nouveaux paquetages opsi

Il existe deux types de dépôts:

*Dépôts Internet*

Exemple: download.uib.de +
Cela sont des dépôts qui sont configurés par:

- URL de base (dans l'exemple http://download.uib.de)
- répertoires ( Une liste de répertoires, par exemple: opsi4.0/produkte/essential)
- et, si nécessaire, nom d'utilisateur et mot de passe pour les dépôts protégés par mot de passe (par exemple pour les abonnements à la gestion des correctifs opsi)

Vous pouvez également configurer un proxy ici.

*serveur opsi*

Ceci est (utilisant un '{opsi-depotserver}') la centrale '{opsi-configserver}' qui sera utilisée pour récupérer les paquets opsi.

L'élément de configuration central est ici:

- 'opsiDepotId'

Cela, dans la plupart des cas sur un '{opsi-depotserver}' la centrale '{opsi-configserver}'. Donc sur tout appel de 'opsi-product-updater' le '{opsi-product-packages}' sera récupéré depuis '{opsi-configserver}'. Cela peut être fait par exemple par une tâche cron.

[[opsi-manual-configuration-tools-opsi-productupdater-actions]]
==== Actions paramétrables

Pour chaque dépôt, vous devez configurer les actions à exécuter:

* 'autoupdate': Les nouvelles versions des paquets installés seront téléchargés et installés

* 'autoinstall': Aussi des paquets qui ne sont pas encore installé, seront téléchargé et installé

* 'autoinstall': Pour tous les nouveaux paquets installés et tous les clients sur lesquels ces paquets sont installés, la demande d'action sera mis à configuration.

En outre, il est possible d'envoyer à tous ces clients un signal Wake-On-LAN pour installer le nouveau logiciel sur les clients. En utilisant {opsi-product} 'shutdownwanted' vous pouvez faire en sorte que les clients seront mis hors tension après l'installation.

* time window for autosetup: Vous pouvez attribuer une fenêtre de temps qui peut être utilisée par les demandes d'action des clients à configurer.

* Automatic WakeOnLan with shutdown: S'il y a un nouveau logiciel, les clients pourraient être réveillé et après l'installation automatiquement arrêté.



[[opsi-manual-configuration-tools-opsi-admin]]
=== Outil: opsi-admin / 'opsi config interface'


[[opsi-manual-configuration-tools-opsi-admin-overview]]
==== Présentation

opsi V3 introduit une bibliothèque en python, de propriété d'opsi,qui fournit une API pour la configuration de opsi. 'opsiconfd' fournit cette API comme un service web, alors que 'opsi-admin' est l'interface en ligne de commande pour cette API.

En appelant https://<opsi-server>:4447/votre navigateur vous offre une interface graphique pour le '{opsi-webservice}'. Vous devez vous connecter en tant que membre du groupe unix 'opsiadmin'.

.opsi config interface: L'accès au service web via un navigateur
image::opsi-webinterface2.png["opsi config interface: L'accès au service web via un navigateur", width=400]

En ligne de commande 'opsi-admin' fournit une interface à opsi-API. Il y a un mode interactif et un mode non interactif pour le traitement par lots à partir de scripts.

L'option d'aide `opsi-admin --help` affiche une liste des options en ligne de commande qui sont disponibles :

[source,shell]
----
# opsi-admin --help

Usage: opsi-admin [options] [command] [args...]
Options:
  -h, --help           Display this text
  -V, --version        Display this text
  -u, --username       Username (default: current user)
  -p, --password       Password (default: prompt for password)
  -a, --address        URL of opsiconfd (default: https://localhost:4447/rpc)
  -d, --direct         Do not use opsiconfd
      --no-depot       Do not use depotserver backend
  -l, --loglevel       Set log level (default: 3)
                       0=nothing, 1=essential, 2=critical, 3=error, 4=warning
                       5=notice, 6=info, 7=debug, 8=debug2, 9=confidential
  -f, --log-file       Path to log file
  -i, --interactive    Start in interactive mode
  -c, --colorize       Colorize output
  -S, --simple-output  Simple output (only for scalars, lists)
  -s, --shell-output   Shell output
----
'opsi-admin' peut utiliser le service web de opsi ou exploiter directement le backend des données. Pour travailler avec le service web vous devez fournir l'URL et un 'nom d'utilisateur' et 'mot de passe'. Pour des raisons de sécurité, vous n'auriez probablement pas envie de faire cela dans un script. Dans ce cas, vous préféreriez un accès direct à la base de données en utilisant l'option `-d`: `opsi-admin -d`.

En mode interactif (commencent par `opsi-admin -d` ou `opsi-admin -d -i -c` ou `opsi-admin -dic`) vous obtenez le support pour la saisie avec la touche TAB. Après quelques saisie, avec la touche TAB vous obtenez une liste ou les détails, du type de données de la prochaine saisie attendue.

L'option `-s` ou `-S` génère un format de sortie qui peut être facilement analysé par des scripts.

Il y a quelques méthodes qui sont basées directement sur les requêtes API, et il ya quelques 'tâches', qui sont un ensemble d'appels de fonctions pour faire un travail spécial plus complexe.

[[opsi-manual-configuration-tools-opsi-admin-typical-usage]]
==== Cas d'utilisation typique

[[opsi-manual-configuration-tools-opsi-admin-typical-usage-setup]]
===== Définissez un produit pour la configuration (setup) pour tous les clients qui ont installé ce produit

[source,shell]
----
opsi-admin -d task setupWhereInstalled "softprod"
----


[[opsi-manual-configuration-tools-opsi-admin-typical-usage-clientlist]]
===== Liste de tous les clients

[source,shell]
----
opsi-admin -d method host_getIdents
----


[[opsi-manual-configuration-tools-opsi-admin-typical-usage-delete-client]]
===== Supprimer un client

[source,shell]
----
opsi-admin -d method host_delete <nom du client>
----

par exemple:

[source,shell]
----
opsi-admin -d method host_delete "pxevm.uib.local"
----


[[opsi-manual-configuration-tools-opsi-admin-typical-usage-create-client]]
===== Créer un client

[source,shell]
----
opsi-admin -d method host_createOpsiClient <nom du client pleinement qualifié>
----

par exemple:

[source,shell]
----
opsi-admin -d method host_createOpsiClient "pxevm.uib.local"
----


[[opsi-manual-configuration-tools-opsi-admin-typical-usage-setProductActionRequest]]
===== Définir une requête d'action

[source,shell]
----
opsi-admin -d method setProductActionRequest <Id du produit> <Id du client> <requête d'action>
----

par exemple:

[source,shell]
----
opsi-admin -d method setProductActionRequest win7 pxevm setup
----


[[opsi-manual-configuration-tools-opsi-admin-typical-usage-setHostDescription]]
===== Joindre la description du client

[source,shell]
----
opsi-admin -d method setHostDescription "dpvm02.uib.local" , "Client sous VMware"
----


[[opsi-manual-configuration-tools-opsi-admin-typical-setPcpatchPassword]]
===== Définir le mot de passe de pcpatch

[source,shell]
----
opsi-admin -d task setPcpatchPassword
----

Défini le mot de passe de l'utilisateur pcpatch pour le compte Unix, samba et opsi.


[[opsi-manual-configuration-tools-serverprocesses]]
=== Processus serveur: opsiconfd et opsipxeconfd

'opsipxeconfd' fournit les 'named pipes' dans les répertoires `tftpboot`, qui sont utilisés pour contrôler le processus de démarrage PXE.

Le fichier de configuration est `/etc/opsi/opsipxeconfd.conf`

Le fichier journal système est `/var/log/opsi/opsipxeconfd.log`.

'opsiconfd' fournit les opsi API comme JSON service web  et ont beaucoup d'autres tâches importantes. Par conséquent 'opsiconfd' est le service central d'opsi et fait tout la communication vers les clients.

En ce qui concerne cette rôle centrale, un outil pour surveiller ce processus donne beaucoup d'informations sur la charge et les problèmes éventuelles. Cet outil est la page d'info de 'opsiconfd'.

[[opsi-manual-configuration-tools-serverprocesses-info]]
==== 'opsiconfd' monitoring: opsiconfd info

Utilisation de l'adresse web https://<opsi-server>:4447/info vous obtiendrez un graphique de la charge et de l'utilisation CPU/mémoire de 'opsiconfd' dans la dernière heure/jour/mois/année. Cette information est complétée par des informations tabulaires, des tâches réelles et des sessions.

.opsiconfd info: Les valeurs de la dernière heure de opsiconfd
image::opsiconfd-info-hour.png["opsiconfd info: Les valeurs de la dernière heure de opsiconfd", width="120mm"]

.opsiconfd info: les valeurs de la dernière journée de opsiconfd
image::opsiconfd-info-day.png["opsiconfd info: les valeurs de la dernière journée de opsiconfd", width="120mm"]






