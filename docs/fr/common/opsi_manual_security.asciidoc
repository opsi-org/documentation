////
; Copyright (c) uib gmbh (www.uib.de)
; Cette documentation appartient à uib
; et publié sous licence Creative Commons by-sa allemande
; voir:
; https://creativecommons.org/licenses/by-sa/3.0/de/
; https://creativecommons.org/licenses/by-sa/3.0/de/legalcode
; anglais:
; https://creativecommons.org/licenses/by-sa/3.0/
; https://creativecommons.org/licenses/by-sa/3.0/legalcode
; 
; crédits: http://www.opsi.org/credits/
////

:Author:    OpenSides sprl
:Email:     opsi@opensides.be
:Date:      16.10.2012
:Revision:  4.0.1
:toclevels: 6


include::../common/opsi_terms.asciidoc[]

[[opsi-manual-security]]
== La sécurité

[[opsi-manual-security-introduction]]
=== Introduction

OPSI est un outil puissant pour l'administration de nombreux clients.

D'après cette réalité, le '{opsi-server}' doit être au centre des considérations de sécurité.

Si vous contrôlez le '{opsi-server}', vous contrôlez tous les clients qui se connectent à ce '{opsi-server}'.

Combien de temps et d'argent vous devez dépenser pour la sécurité de votre '{opsi-server}', dépend de vos besoins en matière de sécurité et de l'environnement opérationnel pour l'utilisation de opsi. Ainsi, par exemple un '{opsi-server}' dans le 'cloud' est plus en danger que un '{opsi-server}' dans un réseau sécurisé.

Dans le chapitre suivant, nous avons rassemblé les questions et les problèmes les plus importantes.

A ce stade, nous disons 'merci' à tous les clients et les utilisateurs qui nous renseignent sur les problèmes de sécurité et qui nous aident à améliorer la sécurité du système opsi. Si vous trouvez un problème de sécurité, vous pouvez nous informer (opsi@opensides.be) avant de divulguer la faille de sécurité publiquement. 

[[opsi-manual-security-staytuned]]
=== Restez à l'écoute

Des informations sur les mises à jour de sécurité et les nouvelles sont publiés dans +
la zone des 'Nouveautés', sur le forum OPSI: +
https://forum.opsi.org/viewforum.php?f=15


[[opsi-manual-security-server]]
=== La sécurité générale du serveur

Le logiciel OPSI peut pas être plus sécurisé que le système d'exploitation sous-jacent. Assurez-vous de mettre à jour votre serveur avec les mises à jour de sécurité de votre distribution Linux. Cela doit être fait non seulement pour '{opsi-configserver}', mais aussi pour tous les '{opsi-depotserver}'.

Il peut vous aider l'installation de programmes qui informent par e-mail s'il y a des nouvelles mises à jour disponibles.

Debian, Ubuntu:: apticron

RHEL, CentOS::  yum-updatesd

Il y a beaucoup de possibilités pour améliorer la sécurité de votre serveur Linux. Mais ce n'est pas la tâche de ce manuel. 

Nous serions heureux de vous aider dans cette tâche dans le cadre d'un contrat de support.

[[opsi-manual-security-depotshare]]
=== Dépôt en lecture seule

Le 'dépôt de partage' qui est utilisé par les clients, devrait être en lecture seule. Ceci est important pour éviter les infections des fichiers par des virus dans le 'dépôt de partage' par un client infectées.

Depuis opsi 4.0.1 il y a un nouveau partage 'opsi_depot' qui est en lecture seule.
Pour utiliser ce partage, exécutez (sur tous vos 'opsi-servers'):

[source,prompt]
----
opsi-setup --auto-configure-samba
----

Cette commande crée le nouveau partage. Ce partage pointe vers le répertoire `/var/lib/opsi/depot`.
Selon votre distribution Linux, un lien symbolique de ce répertoire dans `/opt/pcbin/install` sera créé.

Pour dire aux clients qu'ils doivent maintenant utiliser ce nouveau partage, vous devez exécuter le script suivant sur votre '{opsi-configserver}':

[source,prompt]
----
for depot in $(opsi-admin -dS method host_getIdents unicode "{\"type\":\"OpsiDepotserver\"}"); do
   echo "Depot: $depot"
   depot_remote=$(opsi-admin -dS method host_getObjects [] "{\"id\":\"$depot\"}" | grep "depotRemoteUrl=" | cut -d "=" -f2)
   depot_local=$(opsi-admin -dS method host_getObjects [] "{\"id\":\"$depot\"}" | grep "depotLocalUrl=" | cut -d "=" -f2)
   depot_remote_new=$(echo $depot_remote | sed "s|/opt_pcbin/install|/opsi_depot|")
   depot_local_new=$(echo $depot_local | sed "s|/opt/pcbin/install|/var/lib/opsi/depot|")
   servertype=$(opsi-admin -dS method host_getObjects [] "{\"id\":\"$depot\"}" | grep "type=" | cut -d "=" -f2)
   opsi-admin -d method host_updateObjects "{\"type\":\"$servertype\",\"id\":\"$depot\",\"depotLocalUrl\":\"$depot_local_new\",\"depotRemoteUrl\":\"$depot_remote_new\"}"
done
----

[[opsi-manual-security-client2server]]
=== L'authentification du client sur ​​le serveur
Le client s'authentifie en utilisant le nom de domaine complet comme nom d'utilisateur et le 'opsi-host-key' comme mot de passe.

Le 'opsi-host-key' est stocké sur le client dans le fichier: +
`%programfiles%\opsi.org\opsi-client-agent\opsiclientd\opsiclientd.conf` +
qui est lisible avec des privilèges administratifs seulement. +
Le 'opsi-host-key' est stocké au niveau du serveur dans le backend utilisé (ex. dans `/etc/opsi/pckeys`).

En plus de cette authentification, vous pouvez dire à 'opsiconfd' de vérifier si l'adresse IP du client correspond au FQDN donné. Pour activer cette vérification, vous pouvez définir dans `/etc/opsi/opsiconfd.conf`:

[source,configfile]
----
verify ip = yes
----
et recharger 'opsiconfd':

[source,prompt]
----
/etc/init.d/opsiconfd reload
----
CAUTION: N'utilisez pas cette fonction si vous n'êtes pas vraiment sûr que votre résolution de noms fonctionne correctement dans les deux sens pour tous les clients.

[[opsi-manual-security-server2client]]
=== L'authentification du serveur au client


Depuis opsi 4.0.1 il existe différentes possibilités de vérifier la fiabilité du serveur contacté.

CAUTION: Ne les utilisez pas en combinaison. Choisissez une seule voie ou vous serez verrouillé depuis votre client.

==== Variante 1: verify_server_cert

Lors du premier contact à un serveur opsi, le client accepte le certificat SSL donnée et le stocke dans `C:\opsi.org\opsiclientd\server-certs`. +
Pendant tout contact ultérieur, le client crée une chaîne aléatoire et utilise la 'public key' du certificat stocké pour chiffrer cette chaîne (et les paramètres d'accès). Ces données cryptées sont transmises au serveur. +
Le serveur utilise la 'private key' de son propre certificat SSL pour décrypter les données et envoie la chaîne aléatoire décryptée en retour vers le client. +
Maintenant, le client vérifie si la chaîne correcte a été renvoyé. Si ce n'est pas le cas, la communication avec le serveur est interrompue.

Vous pouvez empêcher la possibilitè de diriger vos clients vers un mauvais serveur, par exemple en manipulant les DNS. Si vous configurez un nouveau serveur, vous pouvez migrer le certificat SSL de l'ancien vers le nouveau serveur sans problèmes. Et vous ne devez pas déployer aucune autorité de certification (CA).

L'inconvénient de cette méthode est que un attaque 'man-in-the-middle' est encore possible.

Cette méthode de sécurité vérifie la communication entre le client et '{opsi-configserver}'.

En utilisant l'extension WAN d'opsi et que +clientconfig.depot.protocol+ +webdav+, aussi les communication vers '{opsi-depotserver}' sont vérifiées.

<<opsi-manual-wansupport-depot-protocol>>


Pour activer cette vérification, réglé `opsiclientd.conf` dans la section '[global]' l'option:
[source,configfile]
----
verify_server_cert = true
----
Exécutez la commande suivante sur votre '{opsi-configserver}' pour créer cette entrée de configuration pour tous les clients:

[source,prompt]
----
opsi-admin -d method config_createBool opsiclientd.global.verify_server_cert "verify_server_cert" false
----

Maintenant, vous pouvez activer cette fonction, en utilisant '{opsi-configed}' avec le bouton 'Configuration du Serveur' ou l'onglet 'Résaux et paramètres supplémentaires' des clients sélectionnés en modifiant la valeur de 'false' à 'true'.

CAUTION: Soyez très prudent avec l'activation de "verify_server_cert", car, en cas de mauvaise configuration, vos clients refuséront la connexion!  

==== Variante 2: verify_server_cert_by_ca

Cette variante fonctionne exactement comme les certificats SSL qui sont vérifiées dans votre navigateur. +
Le certificat SSL donnée ne sera acceptée que s'il est émis pour le FQDN exacte ('commonName') du serveur (ou si le DNS vérifie que c'est le nom de domaine complet correspondant à l'adresse IP du serveur) *et* le certificat est délivré et signé par 'uib gmbh'.

Si une de ces conditions n'est pas vrai, la communication avec le serveur est interrompu.

Cette méthode est plus sûre que la première. Mais vous devrez acheter les certificats chez 'uib gmbh'.
Pour les prix et conditions, vous pouvez jeter un oeil à la liste des prix 'uib gmbh': +
http://uib.de/en/opsi_support/index.html

Tous les profits de la vente de ces certificats seront investis dans le maintien de la sécurité d'opsi.


Pour activer cette méthode de sécurité, réglé dans `opsiclientd.conf` dans la section '[global]' l'option:
[source,configfile]
----
verify_server_cert_by_ca = true
----
Exécutez la commande suivante sur votre '{opsi-configserver}' pour créer cette entrée de configuration pour tous les clients:

[source,prompt]
----
opsi-admin -d method config_createBool opsiclientd.global.verify_server_cert_by_ca "verify_server_cert_by_ca" false
----

Maintenant, vous pouvez l'activer en utilisant '{opsi-configed}' avec le bouton 'Configuration du Serveur' ou l'onglet 'Résaux et paramètres supplémentaires' des clients sélectionnés en modifiant la valeur de 'false' à 'true'.


CAUTION: Soyez très prudent avec l'activation de "verify_server_cert_by_ca", car, en cas de mauvaise configuration, vos clients refuséront la connexion!

[[opsi-manual-security-clientcontrolserver]]
=== L'authentification au niveau du serveur de commande du client

'{opsiclientd}' fournit une interface de service Web, ce qui permet le contrôle à distance de '{opsiclientd}' et donc le contrôle à distance du client.

(<<opsi-manual-clientagent-control>>).


Pour accéder à cette interface est nécessaire l'authentification.
Vous pouvez vous authentifier en tant qu'administrateur local avec un mot de passe non vide, ou avec un nom d'utilisateur vide et le '{opsi-host-key}' comme mot de passe.

[[opsi-manual-security-adminnetwork]]
=== Configuration du réseau admin

L'idée d'un 'réseau admin' est d'interdire tout accès administratif à partir du réseau de production standard et permettre ces accès qu'à partir d'un 'réseau admin' spécial. 

Avec opsi tous les 'clients' ont un accès restreint au 'opsi web service', ce qui leur permet de lire et modifier leurs propres données. L'accès administratif avec des privilèges supplémentaires est accordé seulement aux membres du groupe unix 'opsiadmin'. 

Si vous configurez un paramètre 'admin networks', tous les accès administratifs sont limités à ce réseau(x).

Définissant l'option +[global] admin networks+ dans `/etc/opsi/opsiconfd.conf` limitera l'accès administratif à 'opsiconfd' pour les connexions en provenance de l'adresse de réseau spécifique(s). +
Vous pouvez donner plusieurs adresses séparées par des virgules. +
L'accès non administratif peut également provenir d'autres réseaux.

La valeur par défaut est:
[source,configfile]
----
admin networks = 0.0.0.0/0
----
et permet un accès administrateur depuis tous les réseaux.

Une configuration comme par exemple:
[source,configfile]
----
admin networks = 127.0.0.1/32, 10.1.1.0/24
----
restreint l'accès administratif au serveur lui-même et depuis ​​le réseau '10.1.1.0/24'.

[[opsi-manual-security-pcpatch]]
=== L'utilisateur pcpatch

Avec opsi 4 l'utilisateur 'pcpatch' est seulement utilisé par 'opsi-client-agent' pour monter le 'dépôt de partage' (et en ce moment par les produits netboot 'ntfs-write-image' et 'ntfs-restore-image' pour lire et écrire les fichiers images via ssh).

Le mot de passe de l'utilisateur 'pcpatch' est généralement stocké et transmis crypté. Dans des circonstances spéciales il pourrait être possible de capturer le mot de passe en clair. Pour réduire les risques résultants , vous devez faire ce qui suit:

Refuser à l'utilisateur pcpatch l'accès à tous les partages autres que le partage 'opsi_depot'. Vous devez faire cela en ajoutant l'entrée suivante à toutes les définitions de partage (sauf 'opsi_depot') dans `/etc/samba/smb.conf`:
[source,configfile]
----
invalid users = root pcpatch
----

Alternative +
Dans `/etc/samba/smb.conf` restreindre les privilèges de l'utilisateur 'pcpatch' en lecture seule globale en définissant dans la section [global]:
[source,configfile]
----
read list = pcpatch
----

Comme tâche supplémentaire vous devriez changer fréquemment le mot de passe de l'utilisateur 'pcpatch'. Vous pouvez définir le mot de passe comme une chaîne aléatoire que personne ne doit connaître (sauf opsi). Vous pouvez le faire en appelant la commande suivante, par exemple par une tâche cron:
[source,prompt]
----
opsi-admin -d task setPcpatchPassword $(< /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c16)
----

Si vous ne prévoyez pas d'utiliser les produits netboot 'ntfs-write-image' et 'ntfs-restore-image', vous pouvez refuser une ouverture de session pour l'utilisateur unix 'pcpatch' en définissant dans `/etc/passwd` le shell +/bin/false+ pour l'utilisateur 'pcpatch'.


