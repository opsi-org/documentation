image: docker.uib.gmbh/opsi/opsidoc-antora:bookworm

stages:
  # - lint
  - build
  - publish
  - publish_ext

.install_toolchain: &install_toolchain |
  npm config set fetch-retry-maxtimeout 60000 -g
  # Antora
  npm install
  # Antora-UI
  cd antora-ui
  npm install
  cd ..

.install_cspell: &install_cspell |
  echo "Install cspell"
  npm install -g cspell@latest
  npm install -g @cspell/dict-de-de
  cspell link add @cspell/dict-de-de

#lint-cspell:
 # stage: lint
 # script:
    # - *install_cspell
    #- cspell lint -c cspell.json docs/de/modules/server
    #- cspell lint -c cspell.json docs/de/modules/clients

build-antora:
  stage: build
  script:
    - *install_toolchain
    - cd antora-ui
    - gulp bundle
    - gulp bundle:pack
    - cd ..
    - npx antora -v
    - npx antora generate --log-failure-level warn --log-level=debug antora-playbook.yml
    - touch build/docs-opsi-org/site/index.html
  only:
    - main
    - v4.2
  artifacts:
    paths:
      - build/docs-opsi-org/site
    expire_in: 2 days

build-antora-bonifax:
  stage: build
  script:
    - *install_toolchain
    - cd antora-ui
    - gulp bundle
    - gulp bundle:pack
    - cd ..
    - npx antora -v
    - npx antora generate --log-failure-level warn--log-level=debug bonifax-playbook.yml
    - touch build/bonifax/site/index.html
  except:
    - v4.2
  artifacts:
    paths:
      - build/bonifax/site
    expire_in: 2 days

publish_antora_docs:
  stage: publish
  before_script:
    - 'which ssh-agent || (apt update && apt install -y openssh-client)'
    - 'which rsync || (apt update && apt install -y rsync)'
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$DOCUSER_PRIVATE_KEY")
  script:
    - rsync -e "ssh -o StrictHostKeyChecking=no" --delete -azv build/bonifax/site/* "$DOCUSER@$DOCSERVER:/home/opsi/doc/opsidoc/antora/"
  only:
    - main

publish_to_docs_opsi_org:
  stage: publish_ext
  when: manual
  before_script:
    - 'which ssh-agent || (apt update && apt -y install openssh-client)'
    - 'which rsync || (apt update && apt -y install rsync)'
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$BLOG_PUBLISH_PRIVATE_KEY")
  script:  # rsync with delete to get rid of old artifacts. Exclude python-opsi[-common] to not remove them
    - rsync -e "ssh -o StrictHostKeyChecking=no" --delete -azv build/docs-opsi-org/site/ root@docker1.ext.uib.gmbh:/var/lib/docker/volumes/docs_nginx_data/_data/ --exclude=python-opsi --exclude=python-opsi-common
  only:
    - main
    - v4.2

